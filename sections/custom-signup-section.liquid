<style>
  .custom-signup-form h2 {
    text-align: center;
    margin-bottom: 25px;
    margin-top: 25px;
    font-weight: 600;
    color: #5d5f67;
    font-size: 24px;
  }

  .custom-signup-form {
    padding: 80px 0 20px 0;
  }
  section.custom-signup-form .field {
    margin-bottom: 12px;
  }
  .custom-signup-form .main-wrapper {
    max-width: 47.8rem;
    margin: 0 auto;
  }

  .custom-signup-form input::placeholder {
    font-size: 15px;
    font-weight: 400;
  }
  .custom-signup-form label {
    display: block;
    margin-bottom: 10px;
    font-weight: 400;
    font-size: 18px;
  }
  .custom-signup-form input:focus-visible {
    box-shadow: unset;
    outline: 0;
    border-radius: 0px;
  }

  input[type="text"],
  input[type="email"],
  input[type="password"] {
    width: 100%;
    padding: 15px 12px;
    margin-top: 4px;
    margin-bottom: 8px;
    border-radius: 8px !important;
    font-size: 18px;
    border: 1px solid var(--text-title);
  }

  .password-toggle {
    margin: -10px 0 15px;
    font-size: 14px;
    cursor: pointer;
    color: #0076d6;
    display: block;
  }

  .custom-signup-form .switch-group {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin: 10px 0 20px;
  }

  .custom-signup-form .switch-label {
    font-weight: 600;
    font-size: 18px;
  }

  .custom-signup-form .switch {
    position: relative;
    display: inline-block;
    width: 46px;
    height: 24px;
  }

  .custom-signup-form .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  .custom-signup-form .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: 0.3s;
    border-radius: 24px;
  }

  .custom-signup-form .slider:before {
    position: absolute;
    content: "";
    height: 18px;
    width: 18px;
    left: 3px;
    bottom: 3px;
    background-color: white;
    transition: 0.3s;
    border-radius: 50%;
  }

  input:checked + .slider {
    background-color: #4CAF50;
  }

  input:checked + .slider:before {
    transform: translateX(22px);
  }
  .custom-signup-form button.creat-acc-button:disabled{
    cursor: not-allowed;
    opacity: .5;
  }
  .custom-signup-form button {
    width: 100%;
    padding: 10px;
    background-color: #1C67F3;
    color: #fff;
    font-weight: 400;
    border: none;
    border-radius:50px;
    cursor: pointer;
    min-height: 55px;
    font-size: 18px;
  }

  .custom-signup-form button:hover {
    background-color: #005bb5;
  }

  #signupMessage {
    margin-top: 15px;
    text-align: center;
  }
  .custom-signup-form h2 {
    font-size: 40px;
    color: var(--text-title);
    text-align: center;
    font-weight: 400;
  }
  .custom-signup-form p.account-login-button-bottom {
    color: rgba(18,18,18, 0.85);
    font-size: 14px;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 4px;
  }
  .custom-signup-form p.account-login-button-bottom a{
    font-size: 14px;
    color: rgba(18,18,18, 0.85);
  }
  @media(max-width: 550px) {
    input[type="text"],
    input[type="email"],
    input[type="password"] {
      font-size: 16px;
      padding: 12px 10px;
      margin-bottom: 3px;
    }

    .custom-signup-form button {
      min-height: 45px;
      font-size: 18px;
    }

    .custom-signup-form .switch-label {
      font-size: 16px;
    }

    .custom-signup-form h2 {
      margin-bottom: 18px;
      margin-top: 10px;
    }
    .custom-signup-form h2 {
      font-size: 30px;
    }
  }
</style>

<section class="custom-signup-form customer">
  <div class="page-width">
    <div class="main-wrapper">
      <h2>Create an account</h2>
      <p id="signupMessage"></p>
      <form id="groovSignupForm">
        <div class="field">
          <input type="text" name="firstName" id="firstName" placeholder="First Name" required />
          <label for="firstName">First Name</label>
        </div>
        <div class="field">
          <input type="text" name="lastName" id="lastName" placeholder="Last Name" required />
          <label for="lastName">Last Name</label>
        </div>
        <div class="field">
          <input type="email" placeholder="Email" id="email" name="email" required />
          <label for="lastName">Email</label>
        </div>
        <div class="field" style="position: relative">
          <input type="password" placeholder="Password" name="password" class="show-pass" id="password" required />
          <label for="password">Password</label>
          <svg onclick="togglePassword()" style="display: none" class="EyeButton eyeOpen" version="1.1"
               id="svg2" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" sodipodi:docname="eye-open.svg" inkscape:version="0.48.4 r9939"
               xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"  width="800px" height="800px"
               viewBox="0 0 1200 1200" enable-background="new 0 0 1200 1200" xml:space="preserve">
          <sodipodi:namedview  inkscape:cy="417.05123" inkscape:cx="455.50398" inkscape:zoom="0.37249375" showgrid="false" id="namedview30" guidetolerance="10" gridtolerance="10" objecttolerance="10" borderopacity="1" bordercolor="#666666" pagecolor="#ffffff" inkscape:current-layer="svg2" inkscape:window-maximized="1" inkscape:window-y="24" inkscape:window-height="876" inkscape:window-width="1535" inkscape:pageshadow="2" inkscape:pageopacity="0" inkscape:window-x="65">
              </sodipodi:namedview>
          <path id="path6686" inkscape:connector-curvature="0" d="M779.843,599.925c0,95.331-80.664,172.612-180.169,172.612
              c-99.504,0-180.168-77.281-180.168-172.612c0-95.332,80.664-172.612,180.168-172.612
              C699.179,427.312,779.843,504.594,779.843,599.925z M600,240.521c-103.025,0.457-209.814,25.538-310.904,73.557
              c-75.058,37.122-148.206,89.496-211.702,154.141C46.208,501.218,6.431,549,0,599.981c0.76,44.161,48.13,98.669,77.394,131.763
              c59.543,62.106,130.786,113.018,211.702,154.179c94.271,45.751,198.616,72.092,310.904,73.557
              c103.123-0.464,209.888-25.834,310.866-73.557c75.058-37.122,148.243-89.534,211.74-154.179
              c31.185-32.999,70.962-80.782,77.394-131.763c-0.76-44.161-48.13-98.671-77.394-131.764
              c-59.543-62.106-130.824-112.979-211.74-154.141C816.644,268.36,712.042,242.2,600,240.521z M599.924,329.769
              c156.119,0,282.675,120.994,282.675,270.251c0,149.256-126.556,270.25-282.675,270.25S317.249,749.275,317.249,600.02
              C317.249,450.763,443.805,329.769,599.924,329.769L599.924,329.769z"/>
          </svg>
          <svg onclick="togglePassword()" class="eye-close eyeClosed" width="800" height="800" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4.707 3.293a1 1 0 0 0-1.414 1.414l2.424 2.424c-1.43 1.076-2.678 2.554-3.611 4.422a1 1 0 0 0 0 .894C4.264 16.764 8.096 19 12 19c1.555 0 3.1-.355 4.53-1.055l2.763 2.762a1 1 0 0 0 1.414-1.414zm10.307 13.135c-.98.383-2 .572-3.014.572-2.969 0-6.002-1.62-7.87-5 .817-1.479 1.858-2.62 3.018-3.437l2.144 2.144a3 3 0 0 0 4.001 4.001zm3.538-2.532c.483-.556.926-1.187 1.318-1.896-1.868-3.38-4.9-5-7.87-5q-.168 0-.336.007L9.879 5.223A10.2 10.2 0 0 1 12 5c3.903 0 7.736 2.236 9.894 6.553a1 1 0 0 1 0 .894 13 13 0 0 1-1.925 2.865z" fill="#0D0D0D"/></svg>
        </div>
            {% comment %}
        <!-- <label>
          <input type="text" name="firstName" placeholder="First Name" required />
        </label> -->

        <!-- <label>
          <input type="text" name="lastName" placeholder="Last Name" required />
        </label> -->

        <!-- <label>
          <input type="email" placeholder="Email" name="email" required />
        </label> -->

        <!-- <label class="" style="position: relative">
          <input type="password" placeholder="Password" name="password" class="show-pass" id="password" required />
          <svg onclick="togglePassword()" style="display: none" class="EyeButton eyeOpen" version="1.1"
               id="svg2" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" sodipodi:docname="eye-open.svg" inkscape:version="0.48.4 r9939"
               xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"  width="800px" height="800px"
               viewBox="0 0 1200 1200" enable-background="new 0 0 1200 1200" xml:space="preserve">
          <sodipodi:namedview  inkscape:cy="417.05123" inkscape:cx="455.50398" inkscape:zoom="0.37249375" showgrid="false" id="namedview30" guidetolerance="10" gridtolerance="10" objecttolerance="10" borderopacity="1" bordercolor="#666666" pagecolor="#ffffff" inkscape:current-layer="svg2" inkscape:window-maximized="1" inkscape:window-y="24" inkscape:window-height="876" inkscape:window-width="1535" inkscape:pageshadow="2" inkscape:pageopacity="0" inkscape:window-x="65">
              </sodipodi:namedview>
          <path id="path6686" inkscape:connector-curvature="0" d="M779.843,599.925c0,95.331-80.664,172.612-180.169,172.612
              c-99.504,0-180.168-77.281-180.168-172.612c0-95.332,80.664-172.612,180.168-172.612
              C699.179,427.312,779.843,504.594,779.843,599.925z M600,240.521c-103.025,0.457-209.814,25.538-310.904,73.557
              c-75.058,37.122-148.206,89.496-211.702,154.141C46.208,501.218,6.431,549,0,599.981c0.76,44.161,48.13,98.669,77.394,131.763
              c59.543,62.106,130.786,113.018,211.702,154.179c94.271,45.751,198.616,72.092,310.904,73.557
              c103.123-0.464,209.888-25.834,310.866-73.557c75.058-37.122,148.243-89.534,211.74-154.179
              c31.185-32.999,70.962-80.782,77.394-131.763c-0.76-44.161-48.13-98.671-77.394-131.764
              c-59.543-62.106-130.824-112.979-211.74-154.141C816.644,268.36,712.042,242.2,600,240.521z M599.924,329.769
              c156.119,0,282.675,120.994,282.675,270.251c0,149.256-126.556,270.25-282.675,270.25S317.249,749.275,317.249,600.02
              C317.249,450.763,443.805,329.769,599.924,329.769L599.924,329.769z"/>
          </svg>
          <svg onclick="togglePassword()" class="eye-close eyeClosed" width="800" height="800" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4.707 3.293a1 1 0 0 0-1.414 1.414l2.424 2.424c-1.43 1.076-2.678 2.554-3.611 4.422a1 1 0 0 0 0 .894C4.264 16.764 8.096 19 12 19c1.555 0 3.1-.355 4.53-1.055l2.763 2.762a1 1 0 0 0 1.414-1.414zm10.307 13.135c-.98.383-2 .572-3.014.572-2.969 0-6.002-1.62-7.87-5 .817-1.479 1.858-2.62 3.018-3.437l2.144 2.144a3 3 0 0 0 4.001 4.001zm3.538-2.532c.483-.556.926-1.187 1.318-1.896-1.868-3.38-4.9-5-7.87-5q-.168 0-.336.007L9.879 5.223A10.2 10.2 0 0 1 12 5c3.903 0 7.736 2.236 9.894 6.553a1 1 0 0 1 0 .894 13 13 0 0 1-1.925 2.865z" fill="#0D0D0D"/></svg>
        </label> -->
        {% endcomment %}

        <div class="switch-group">
          <span class="switch-label">Email Marketing:</span>
          <label class="switch">
            <input type="checkbox" id="emailMarketingToggle" checked />
            <span class="slider"></span>
          </label>
        </div>

        <button class="creat-acc-button" type="submit">Sign Up</button>
        <p class="account-login-button-bottom">Already have an account?<a href="/account/login">Login here</a></p>
      </form>
    </div>
  </div>
</section>


<script>
  const form = document.getElementById('groovSignupForm');
  const message = document.getElementById('signupMessage');
  const passwordField = document.getElementById('password');
  const submitBtn = document.querySelector('.creat-acc-button');

  function togglePassword() {
    const passwordInput = document.getElementById('password');
    const eyeOpen = document.querySelector('.eyeOpen');
    const eyeClosed = document.querySelector('.eyeClosed');

    if (passwordInput.type === 'password') {
      passwordInput.type = 'text';
      eyeOpen.style.display = 'flex';
      eyeClosed.style.display = 'none';
    } else {
      passwordInput.type = 'password';
      eyeOpen.style.display = 'none';
      eyeClosed.style.display = 'flex';
    }
  }

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    const formData = new FormData(form);
    const password = formData.get('password');
    const FirstName = formData.get('firstName');
    const LastName = formData.get('lastName');
    const Email = formData.get('email');
    const Password = formData.get('password');
    const EmailMarketing = document.getElementById('emailMarketingToggle').checked;

    // Disable button and show loader
    submitBtn.disabled = true;
    const originalBtnText = submitBtn.innerHTML;
    submitBtn.innerHTML = 'Signing up...';

    const payload = {
      Username: Email,
      Password: password,
      Email,
      FirstName,
      LastName,
      EnterpriseUser: false,
      EnterpriseID: null,
      EmailMarketing,
      identity_provider: 'Shopify Manual',
    };

    try {
      // Step 1: Create consumer
      await fetch('https://consumerapi.groov.me/api/consumer', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ FirstName, LastName, Email }),
      });

      // Step 2: Proceed with signup
      const response = await fetch('https://consumerapi.groov.me/api/auth/signup', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(payload),
      });

      const result = await response.json();
      console.log('Signup Response:', result);

      // ✅ Handle known API error messages gracefully
      if (!response.ok || result.error) {
        const apiMessage = result.message;
        let userMessage = apiMessage;

        if (apiMessage === 'InvalidPasswordException') {
          userMessage = 'Password must be at least 8 characters and include 1 uppercase, 1 number, and 1 special character.';
        }

        throw new Error(userMessage);
      }

      // ✅ Show success
      message.textContent = result?.message || 'Signup successful! Welcome to Groov.';
      message.style.color = 'green';
      form.reset();

      // ✅ Show success modal
      const successModal = document.getElementById('successModal');
      if (successModal) {
        successModal.style.display = 'flex';
      }

      localStorage.setItem('email', Email);
      localStorage.setItem('password', Password);

      setTimeout(() => {
        window.location.href = '/account/login';
      }, 5000);
    } catch (error) {
      console.error('Signup Error:', error);
      message.textContent = error.message || 'Signup failed. Please try again.';
      message.style.color = 'red';
    } finally {
      const successModal = document.getElementById('successModal');
      if (!successModal || successModal.style.display !== 'flex') {
        submitBtn.disabled = false;
        submitBtn.innerHTML = originalBtnText;
      }
    }
  });
</script>



{% comment %}
<script>
  const form = document.getElementById('groovSignupForm');
  const message = document.getElementById('signupMessage');
  const passwordField = document.getElementById('password');

  function togglePassword() {
    const type = passwordField.type === 'password' ? 'text' : 'password';
    passwordField.type = type;
    event.target.textContent = type === 'text' ? 'Hide Password' : 'Show Password';
  }

  function validatePassword(password) {
    const regex = /^(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
    return regex.test(password);
  }

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    const formData = new FormData(form);
    const password = formData.get('password');

    if (!validatePassword(password)) {
      message.textContent =
        'Password must be at least 8 characters and include 1 uppercase, 1 number, and 1 special character.';
      message.style.color = 'red';
      return;
    }

    const payload = {
      Username: formData.get('email'),
      Password: password,
      Email: formData.get('email'),
      FirstName: formData.get('firstName'),
      LastName: formData.get('lastName'),
      EnterpriseUser: false,
      EnterpriseID: null,
      EmailMarketing: document.getElementById('emailMarketingToggle').checked,
      identity_provider: 'Shopify Manual',
    };

    try {
      const response = await fetch(
        'https://devconsumerapi.groov.me/api/auth/signup',
        {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(payload),
        }
      );

      if (!response.ok) {
        const errorText = await response.text();
        throw new Error(`Signup failed: ${errorText}`);
      }

      const result = await response.json();
      console.log('Signup Response:', result);

      message.textContent = 'Signup successful! Welcome to Groov.';
      message.style.color = 'green';
      form.reset();
    } catch (error) {
      console.error('Signup Error:', error);
      message.textContent = 'Signup failed. Please try again.';
      message.style.color = 'red';
    }
  });
</script>
{% endcomment %}

{% schema %}
{
  "name": "Custom Signup Section",
  "settings": [],
  "presets": [
    {
      "name": "Custom Signup Section"
    }
  ]
}
{% endschema %}
